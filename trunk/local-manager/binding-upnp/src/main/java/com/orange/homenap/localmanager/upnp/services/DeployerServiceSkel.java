/*
 * --------------------------------------------------------
 *  Module Name : local-manager-upnp
 *  Version : 0.1-SNAPSHOT
 *
 *  Software Name : HomeNap
 *  Version : 0.1-SNAPSHOT
 *
 *  Copyright © 28/06/2012 – 28/06/2012 France Télécom
 *  This software is distributed under the Apache 2.0 license,
 *  the text of which is available at http://www.apache.org/licenses/LICENSE-2.0.html
 *  or see the "LICENSE-2.0.txt" file for more details.
 *
 * --------------------------------------------------------
 *  File Name   : DeployerServiceSkel.java
 *
 *  Created     : 28/06/2012
 *  Author(s)   : Remi Druilhe
 *
 *  Description :
 *
 * --------------------------------------------------------
 */

/**
 * DeployerServiceSkel.java
 * 
 * generated by France Telecom UPnP Generator
 * 
 */

package com.orange.homenap.localmanager.upnp.services;


import com.orange.homenap.api.IDeployerService;
import com.orange.homenap.localmanager.upnp.holders.*;

/**
	* This is the class for a sending an event
	*/
public class DeployerServiceSkel extends UPnPGenService{
	public static final String ID      = "urn:upnp-org:serviceId:Deployer.1";
	public static final String TYPE    = "urn:schemas-upnp-org:service:Deployer:1";
	public static final String VERSION = "1";
	//		Reference to some implementation of functionality which implements IDeployer
	private IDeployerService impl;
	/* List of evented state variables
	 * 
	 * For a list of all state variables (evented and non-evented ones), use: 
	 *    UPnPStateVariable [] stateVariables = this.getStateVariables();
	 * 
	 * For updating a statevariable, use: 
	 *    stateVariable.setValue(newValue);
	 * Example: 
	 *    target.setValue(new java.lang.Boolean(0));
	 * 
	 * If the updated state variable is evented (i.e. sendsEvents() returns true),
	 * an event is automatically generated. 
	 */ 
	public DeployerServiceSkel(IDeployerService impl) {
		super(ID,TYPE);
		this.impl=impl;
		setStateVariables(DeployerVariableProperties.createUPnPStateVariables());
		setActions(DeployerActionProperties.createUPnPActions(this));
	}
	public DeployerServiceSkel() {
		super(ID,TYPE);
		setStateVariables(DeployerVariableProperties.createUPnPStateVariables());
		setActions(DeployerActionProperties.createUPnPActions(this));
	}
	public IDeployerService getImpl() {
		return impl;
	}
	public void setImpl(IDeployerService impl) {
		this.impl=impl;
	}
}
