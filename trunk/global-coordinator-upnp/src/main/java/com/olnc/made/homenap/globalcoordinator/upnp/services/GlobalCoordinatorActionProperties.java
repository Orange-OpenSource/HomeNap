/*
 * --------------------------------------------------------
 *  Module Name : global-coordinator-upnp
 *  Version : 0.1-SNAPSHOT
 *
 *  Software Name : HomeNap
 *  Version : 0.1-SNAPSHOT
 *
 *  Copyright © 28/06/2012 – 28/06/2012 France Télécom
 *  This software is distributed under the Apache 2.0 license,
 *  the text of which is available at http://www.apache.org/licenses/LICENSE-2.0.html
 *  or see the "LICENSE-2.0.txt" file for more details.
 *
 * --------------------------------------------------------
 *  File Name   : GlobalCoordinatorActionProperties.java
 *
 *  Created     : 28/06/2012
 *  Author(s)   : Remi Druilhe
 *
 *  Description :
 *
 *  generated by France Telecom UPnP Generator
 *
 * --------------------------------------------------------
 */

package com.olnc.made.homenap.globalcoordinator.upnp.services;


import org.osgi.service.upnp.*;
import java.util.Dictionary;
import com.olnc.made.homenap.globalcoordinator.upnp.holders.*;

    /**
	* This is the class representing a GlobalCoordinatorService
	*/
public class GlobalCoordinatorActionProperties {
	public static final String UPDATESERVICESSTATE_NAME = "UpdateServicesState";
	public static final String UPDATESERVICESSTATE_DEVICEID_ARGUMENT_NAME = "DeviceId";
	public static final String UPDATESERVICESSTATE_DEVICEID_RELATED_STATE_VARIABLE = "ARG_TYPE_DeviceId";
	public static final String UPDATESERVICESSTATE_SERVICESSTATE_ARGUMENT_NAME = "ServicesState";
	public static final String UPDATESERVICESSTATE_SERVICESSTATE_RELATED_STATE_VARIABLE = "ARG_TYPE_ServicesState";

	public static final String UPDATEDEVICESTATE_NAME = "UpdateDeviceState";
	public static final String UPDATEDEVICESTATE_DEVICEID_ARGUMENT_NAME = "DeviceId";
	public static final String UPDATEDEVICESTATE_DEVICEID_RELATED_STATE_VARIABLE = "ARG_TYPE_DeviceId";
	public static final String UPDATEDEVICESTATE_STATE_ARGUMENT_NAME = "State";
	public static final String UPDATEDEVICESTATE_STATE_RELATED_STATE_VARIABLE = "ARG_TYPE_State";

	public static final String REGISTER_NAME = "Register";
	public static final String REGISTER_DEVICEINFO_ARGUMENT_NAME = "DeviceInfo";
	public static final String REGISTER_DEVICEINFO_RELATED_STATE_VARIABLE = "ARG_TYPE_DeviceInfo";
	public static final String REGISTER_SUCCESS_ARGUMENT_NAME = "Success";
	public static final String REGISTER_SUCCESS_RELATED_STATE_VARIABLE = "ARG_TYPE_Success";

	public static final String UNREGISTER_NAME = "UnRegister";
	public static final String UNREGISTER_DEVICEID_ARGUMENT_NAME = "DeviceId";
	public static final String UNREGISTER_DEVICEID_RELATED_STATE_VARIABLE = "ARG_TYPE_DeviceId";
	public static final String UNREGISTER_SUCCESS_ARGUMENT_NAME = "Success";
	public static final String UNREGISTER_SUCCESS_RELATED_STATE_VARIABLE = "ARG_TYPE_Success";

	public static UPnPAction [] createUPnPActions(final GlobalCoordinatorServiceSkel service) {
		return new UPnPAction [] {
			new UPnPGenAction(UPDATESERVICESSTATE_NAME,
			service,
				new UPnPGenInArgument [] {
					new UPnPGenInArgument(
					UPDATESERVICESSTATE_DEVICEID_ARGUMENT_NAME,
					UPDATESERVICESSTATE_DEVICEID_RELATED_STATE_VARIABLE),
					new UPnPGenInArgument(
					UPDATESERVICESSTATE_SERVICESSTATE_ARGUMENT_NAME,
					UPDATESERVICESSTATE_SERVICESSTATE_RELATED_STATE_VARIABLE)
				},
				null) {
				public Dictionary invoke(Dictionary args) throws Exception {
					return GlobalCoordinatorActionHandler.updateServicesState_invoke(args, service.getImpl());
				}
			},
			new UPnPGenAction(UPDATEDEVICESTATE_NAME,
			service,
				new UPnPGenInArgument [] {
					new UPnPGenInArgument(
					UPDATEDEVICESTATE_DEVICEID_ARGUMENT_NAME,
					UPDATEDEVICESTATE_DEVICEID_RELATED_STATE_VARIABLE),
					new UPnPGenInArgument(
					UPDATEDEVICESTATE_STATE_ARGUMENT_NAME,
					UPDATEDEVICESTATE_STATE_RELATED_STATE_VARIABLE)
				},
				null) {
				public Dictionary invoke(Dictionary args) throws Exception {
					return GlobalCoordinatorActionHandler.updateDeviceState_invoke(args, service.getImpl());
				}
			},
			new UPnPGenAction(REGISTER_NAME,
			service,
				new UPnPGenInArgument [] {
					new UPnPGenInArgument(
					REGISTER_DEVICEINFO_ARGUMENT_NAME,
					REGISTER_DEVICEINFO_RELATED_STATE_VARIABLE)
				},
				new UPnPGenOutArgument [] {
					new UPnPGenOutArgument(
					REGISTER_SUCCESS_ARGUMENT_NAME,
					REGISTER_SUCCESS_RELATED_STATE_VARIABLE)
				}) {
				public Dictionary invoke(Dictionary args) throws Exception {
					return GlobalCoordinatorActionHandler.register_invoke(args, service.getImpl());
				}
			},
			new UPnPGenAction(UNREGISTER_NAME,
			service,
				new UPnPGenInArgument [] {
					new UPnPGenInArgument(
					UNREGISTER_DEVICEID_ARGUMENT_NAME,
					UNREGISTER_DEVICEID_RELATED_STATE_VARIABLE)
				},
				new UPnPGenOutArgument [] {
					new UPnPGenOutArgument(
					UNREGISTER_SUCCESS_ARGUMENT_NAME,
					UNREGISTER_SUCCESS_RELATED_STATE_VARIABLE)
				}) {
				public Dictionary invoke(Dictionary args) throws Exception {
					return GlobalCoordinatorActionHandler.unRegister_invoke(args, service.getImpl());
				}
			}
		};
	}
}
